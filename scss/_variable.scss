@import 'avalanchesass_function_breakpointmax';
@import 'avalanchesass_function_map_get_deep';

/*---
title:   Variable
name:    variable
---

Basic system variables.
*/
/*---
title:   Color scheme
name:    variable_color_scheme
section: variable
---

It's mandatory to use color scheme variables
whenever you use colors in your styles.  
Generator: [coolors.co](http://coolors.co/).
*/
$cs: (
  a: #16193B,
  b: #35478C,
  c: #4E7AC7,
  d: #7FB2F0,
  e: #ADD5F7,
);

$cs-contrast: (
  a: #fff,
  b: #fff,
  c: #fff,
  d: #fff,
  e: #fff,
);
/*---
title:   Basic
name:    variable_color_scheme_basic
section: variable_color_scheme
---

```example:color
@color: #{map-get($cs, a)} @name: map-get($cs, a)
@color: #{map-get($cs, b)} @name: map-get($cs, b)
@color: #{map-get($cs, c)} @name: map-get($cs, c)
@color: #{map-get($cs, d)} @name: map-get($cs, d)
@color: #{map-get($cs, e)} @name: map-get($cs, e)
```
```example:color
@color: #{map-get($cs-contrast, a)} @name: map-get($cs-contrast, a)
@color: #{map-get($cs-contrast, b)} @name: map-get($cs-contrast, b)
@color: #{map-get($cs-contrast, c)} @name: map-get($cs-contrast, c)
@color: #{map-get($cs-contrast, d)} @name: map-get($cs-contrast, d)
@color: #{map-get($cs-contrast, e)} @name: map-get($cs-contrast, e)
```
*/

/**
 * Alerts
 */
$cs-alerts: (
  positive: #468847,
  neutral:  #3A87AD,
  cautious: #c09853,
  negative: #b94a48,
);
/*---
title:   Alerts
name:    variable_color_scheme_alerts
section: variable_color_scheme
---

```example:color
@color: #{map-get($cs-alerts, positive)} @name: map-get($cs-alerts, positive)
@color: #{map-get($cs-alerts, neutral)} @name: map-get($cs-alerts, neutral)
@color: #{map-get($cs-alerts, cautious)} @name: map-get($cs-alerts, cautious)
@color: #{map-get($cs-alerts, negative)} @name: map-get($cs-alerts, negative)
```
*/

/**
 * Grey
 *
 * 1. You must not use this directly in your styles!
 */
$-cs-grey-base: #efefef; // [1]
$cs-grey: (
  a: $-cs-grey-base,
  b: darken($-cs-grey-base, 20%),
  c: darken($-cs-grey-base, 40%),
);
/*---
title:   Grey
name:    variable_color_scheme_grey
section: variable_color_scheme
---

```example:color
@color: #{map-get($cs-grey, a)} @name: map-get($cs-grey, a)
@color: #{map-get($cs-grey, b)} @name: map-get($cs-grey, b)
@color: #{map-get($cs-grey, c)} @name: map-get($cs-grey, c)
```
*/



/*---
title:   Typography
name:    variable_typography
section: variable
---
*/
/**
 * 1. Must be in px, do not use in your styles.
 * 2. You must not use this directly in your styles!
 */
$font-base-size:        16px; // [1][2]
$font-base-line-height: 24px; // [1][2]
$font-base-color:       #222;

/**
 * Font sizes
 */
$font-sizes: (
  xs:   0.64em,
  s:    0.8em,
  m:    1em,
  l:    1.25em,
  xl:   1.563em,
  xxl:  1.953em,
  xxxl: 2.441em,
);
/*---
title:   Font sizes
name:    variable_typography_font_sizes
section: variable_typography
---

<div style="font-size: #{map-get($font-sizes, xs)};">map-get($font-sizes, xs)</div>
<div style="font-size: #{map-get($font-sizes, s)};">map-get($font-sizes, s)</div>
<div style="font-size: #{map-get($font-sizes, m)};">map-get($font-sizes, m)</div>
<div style="font-size: #{map-get($font-sizes, l)};">map-get($font-sizes, l)</div>
<div style="font-size: #{map-get($font-sizes, xl)};">map-get($font-sizes, xl)</div>
<div style="font-size: #{map-get($font-sizes, xxl)};">map-get($font-sizes, xxl)</div>
<div style="font-size: #{map-get($font-sizes, xxxl)};">map-get($font-sizes, xxxl)</div>
*/

$font-sizes: map-merge($font-sizes, (
  h1: map-get($font-sizes, xxxl),
  h2: map-get($font-sizes, xxl),
  h3: map-get($font-sizes, xl),
  h4: map-get($font-sizes, l),
  h5: map-get($font-sizes, m),
  h6: map-get($font-sizes, m),
));

/*---
title:   Fonts
name:    variable_typography_fonts
section: variable_typography
---

Font sizes and weights are defined globally to ensure a consistent look.
*/
/**
 * If you use webfonts set the font weight variables according to the font weights the font provides.
 * E.g. you use a Google font like http://fonts.googleapis.com/css?family=Source+Sans+Pro:200,400,700
 * In this case set the font weights to 200, 400 and 700.
 * If you set a font weight in your css you must use this variables!
 */
$fonts: (
  a: (
    family: "'Helvetica Neue', sans-serif",
    weights: (
      thin:        100,
      extra-light: 200,
      light:       300,
      normal:      400,
      medium:      500,
      semi-bold:   600,
      bold:        700,
      extra-bold:  800,
      ultra-bold:  900,
    ),
  ),
  b: (
    family: "'Helvetica Neue', sans-serif",
    weights: (
      thin:        100,
      extra-light: 200,
      light:       300,
      normal:      400,
      medium:      500,
      semi-bold:   600,
      bold:        700,
      extra-bold:  800,
      ultra-bold:  900,
    ),
  ),
);

@each $-font-data in $fonts {
  $-font: nth($-font-data, 1);
  /*---
  title:   Font #{to-upper-case($-font)}
  name:    variable_typography_fonts_font_#{$-font}
  section: variable_typography_fonts
  ---

  <p style="font-family: #{map-get-deep($fonts, $-font, family)};">
  **#{map-get-deep($fonts, $-font, family)}**  
  ABCDEFGHIJKLMNOPQRSTUVWXYZ  
  abcdefghijklmnopqrstuvwxyz  
  0123456789!?#%&$@*{(/|\)}</p>
  */
}



/**
 * Breakpoints
 *
 * Infos about media queries: [Brad Frost - 7 Habits of highly effective media queries](http://bradfrost.com/blog/post/7-habits-of-highly-effective-media-queries/)
 */
/**
 * min Breakpoints
 */
$breakpoints: (
  s:  30em,
  m:  45em,
  l:  60em,
  xl: 75em,
);

/**
 * max Breakpoints
 *
 * Use with care, min-width breakpoints should be preferred!
 */
$breakpoints-max: (
  s:  breakpointmax(map-get($breakpoints, s)),
  m:  breakpointmax(map-get($breakpoints, m)),
  l:  breakpointmax(map-get($breakpoints, l)),
  xl: breakpointmax(map-get($breakpoints, xl)),
);



/**
 * Spacing
 */
$spacing: (
  xs:   0.5em,
  s:    1em,
  m:    1.5em,
  l:    2em,
  xl:   3em,
  xxl:  4em,
  xxxl: 5em,
);



/**
 * Namespace
 */
$namespace: (
  utility:   'u-',
  object:    'o-',
  component: 'c-',
);
